Terminals unused in grammar

   LBRACK
   RBRACK
   DOT


State 41 conflicts: 13 shift/reduce
State 104 conflicts: 13 shift/reduce


Grammar

    0 $accept: file $end

    1 file: %empty
    2     | function_def file
    3     | global_def file

    4 function_def: FUNCTION IDENT LPAREN args RPAREN LBRACE body RBRACE

    5 global_def: IDENT EQUAL constant_expression SEMI

    6 args: %empty
    7     | IDENT
    8     | args COMMA IDENT

    9 body: statement
   10     | body statement

   11 statement: expression SEMI
   12          | assign_expression SEMI
   13          | if_statement
   14          | while_statement
   15          | scope_statement
   16          | block_statement SEMI
   17          | yield_statement SEMI
   18          | return_statement SEMI
   19          | fork_statement SEMI

   20 if_statement: IF LPAREN expression RPAREN LBRACE body RBRACE else_statement

   21 else_statement: %empty
   22               | ELSE LPAREN body RPAREN
   23               | ELSE if_statement

   24 while_statement: WHILE expression RPAREN LBRACE body RBRACE

   25 scope_statement: SCOPE scope_type LBRACE body RBRACE

   26 scope_type: ALWAYS
   27           | SUCCESS
   28           | FAILURE

   29 block_statement: BLOCK IDENT

   30 yield_statement: YIELD

   31 return_statement: RETURN
   32                 | RETURN expression

   33 fork_statement: FORK IDENT

   34 assign_expression: IDENT EQUAL STRING
   35                  | IDENT EQUAL expression

   36 expression: atom
   37           | uop expression
   38           | LPAREN expression RPAREN
   39           | expression op expression

   40 constant_expression: constant_atom
   41                    | uop constant_expression
   42                    | LPAREN constant_expression RPAREN
   43                    | constant_expression op constant_expression

   44 constant_atom: NUMERIC
   45              | STRING

   46 atom: IDENT
   47     | NUMERIC
   48     | function_call

   49 function_call: IDENT LPAREN params RPAREN

   50 params: %empty
   51       | expression
   52       | STRING
   53       | args COMMA expression
   54       | args COMMA STRING

   55 op: OR
   56   | XOR
   57   | AND
   58   | EQUAL_EQUAL
   59   | LANGLE
   60   | RANGLE
   61   | LANGLE_EQUAL
   62   | RANGLE_EQUAL
   63   | PLUS
   64   | MINUS
   65   | STAR
   66   | FSLASH
   67   | PERCENT

   68 uop: NOT
   69    | MINUS
   70    | PLUS


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMERIC (258) 44 47
IDENT (259) 4 5 7 8 29 33 34 35 46 49
STRING (260) 34 45 52 54
LBRACE (261) 4 20 24 25
RBRACE (262) 4 20 24 25
LPAREN (263) 4 20 22 38 42 49
RPAREN (264) 4 20 22 24 38 42 49
LBRACK (265)
RBRACK (266)
DOT (267)
SEMI (268) 5 11 12 16 17 18 19
COMMA (269) 8 53 54
EQUAL (270) 5 34 35
FUNCTION (271) 4
WHILE (272) 24
IF (273) 20
ELSE (274) 22 23
BLOCK (275) 29
YIELD (276) 30
RETURN (277) 31 32
FORK (278) 33
SCOPE (279) 25
ALWAYS (280) 26
SUCCESS (281) 27
FAILURE (282) 28
OR (283) 55
XOR (284) 56
AND (285) 57
EQUAL_EQUAL (286) 58
LANGLE (287) 59
RANGLE (288) 60
LANGLE_EQUAL (289) 61
RANGLE_EQUAL (290) 62
PLUS (291) 63 70
MINUS (292) 64 69
STAR (293) 65
FSLASH (294) 66
PERCENT (295) 67
NOT (296) 68
UNARY (297)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
file (44)
    on left: 1 2 3, on right: 0 2 3
function_def (45)
    on left: 4, on right: 2
global_def (46)
    on left: 5, on right: 3
args (47)
    on left: 6 7 8, on right: 4 8 53 54
body (48)
    on left: 9 10, on right: 4 10 20 22 24 25
statement (49)
    on left: 11 12 13 14 15 16 17 18 19, on right: 9 10
if_statement (50)
    on left: 20, on right: 13 23
else_statement (51)
    on left: 21 22 23, on right: 20
while_statement (52)
    on left: 24, on right: 14
scope_statement (53)
    on left: 25, on right: 15
scope_type (54)
    on left: 26 27 28, on right: 25
block_statement (55)
    on left: 29, on right: 16
yield_statement (56)
    on left: 30, on right: 17
return_statement (57)
    on left: 31 32, on right: 18
fork_statement (58)
    on left: 33, on right: 19
assign_expression (59)
    on left: 34 35, on right: 12
expression (60)
    on left: 36 37 38 39, on right: 11 20 24 32 35 37 38 39 51 53
constant_expression (61)
    on left: 40 41 42 43, on right: 5 41 42 43
constant_atom (62)
    on left: 44 45, on right: 40
atom (63)
    on left: 46 47 48, on right: 36
function_call (64)
    on left: 49, on right: 48
params (65)
    on left: 50 51 52 53 54, on right: 49
op (66)
    on left: 55 56 57 58 59 60 61 62 63 64 65 66 67, on right: 39 43
uop (67)
    on left: 68 69 70, on right: 37 41


State 0

    0 $accept: . file $end
    1 file: . %empty  [$end]
    2     | . function_def file
    3     | . global_def file
    4 function_def: . FUNCTION IDENT LPAREN args RPAREN LBRACE body RBRACE
    5 global_def: . IDENT EQUAL constant_expression SEMI

    IDENT     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $default  reduce using rule 1 (file)

    file          go to state 3
    function_def  go to state 4
    global_def    go to state 5


State 1

    5 global_def: IDENT . EQUAL constant_expression SEMI

    EQUAL  shift, and go to state 6


State 2

    4 function_def: FUNCTION . IDENT LPAREN args RPAREN LBRACE body RBRACE

    IDENT  shift, and go to state 7


State 3

    0 $accept: file . $end

    $end  shift, and go to state 8


State 4

    1 file: . %empty  [$end]
    2     | . function_def file
    2     | function_def . file
    3     | . global_def file
    4 function_def: . FUNCTION IDENT LPAREN args RPAREN LBRACE body RBRACE
    5 global_def: . IDENT EQUAL constant_expression SEMI

    IDENT     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $default  reduce using rule 1 (file)

    file          go to state 9
    function_def  go to state 4
    global_def    go to state 5


State 5

    1 file: . %empty  [$end]
    2     | . function_def file
    3     | . global_def file
    3     | global_def . file
    4 function_def: . FUNCTION IDENT LPAREN args RPAREN LBRACE body RBRACE
    5 global_def: . IDENT EQUAL constant_expression SEMI

    IDENT     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $default  reduce using rule 1 (file)

    file          go to state 10
    function_def  go to state 4
    global_def    go to state 5


State 6

    5 global_def: IDENT EQUAL . constant_expression SEMI
   40 constant_expression: . constant_atom
   41                    | . uop constant_expression
   42                    | . LPAREN constant_expression RPAREN
   43                    | . constant_expression op constant_expression
   44 constant_atom: . NUMERIC
   45              | . STRING
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 11
    STRING   shift, and go to state 12
    LPAREN   shift, and go to state 13
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    constant_expression  go to state 17
    constant_atom        go to state 18
    uop                  go to state 19


State 7

    4 function_def: FUNCTION IDENT . LPAREN args RPAREN LBRACE body RBRACE

    LPAREN  shift, and go to state 20


State 8

    0 $accept: file $end .

    $default  accept


State 9

    2 file: function_def file .

    $default  reduce using rule 2 (file)


State 10

    3 file: global_def file .

    $default  reduce using rule 3 (file)


State 11

   44 constant_atom: NUMERIC .

    $default  reduce using rule 44 (constant_atom)


State 12

   45 constant_atom: STRING .

    $default  reduce using rule 45 (constant_atom)


State 13

   40 constant_expression: . constant_atom
   41                    | . uop constant_expression
   42                    | . LPAREN constant_expression RPAREN
   42                    | LPAREN . constant_expression RPAREN
   43                    | . constant_expression op constant_expression
   44 constant_atom: . NUMERIC
   45              | . STRING
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 11
    STRING   shift, and go to state 12
    LPAREN   shift, and go to state 13
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    constant_expression  go to state 21
    constant_atom        go to state 18
    uop                  go to state 19


State 14

   70 uop: PLUS .

    $default  reduce using rule 70 (uop)


State 15

   69 uop: MINUS .

    $default  reduce using rule 69 (uop)


State 16

   68 uop: NOT .

    $default  reduce using rule 68 (uop)


State 17

    5 global_def: IDENT EQUAL constant_expression . SEMI
   43 constant_expression: constant_expression . op constant_expression
   55 op: . OR
   56   | . XOR
   57   | . AND
   58   | . EQUAL_EQUAL
   59   | . LANGLE
   60   | . RANGLE
   61   | . LANGLE_EQUAL
   62   | . RANGLE_EQUAL
   63   | . PLUS
   64   | . MINUS
   65   | . STAR
   66   | . FSLASH
   67   | . PERCENT

    SEMI          shift, and go to state 22
    OR            shift, and go to state 23
    XOR           shift, and go to state 24
    AND           shift, and go to state 25
    EQUAL_EQUAL   shift, and go to state 26
    LANGLE        shift, and go to state 27
    RANGLE        shift, and go to state 28
    LANGLE_EQUAL  shift, and go to state 29
    RANGLE_EQUAL  shift, and go to state 30
    PLUS          shift, and go to state 31
    MINUS         shift, and go to state 32
    STAR          shift, and go to state 33
    FSLASH        shift, and go to state 34
    PERCENT       shift, and go to state 35

    op  go to state 36


State 18

   40 constant_expression: constant_atom .

    $default  reduce using rule 40 (constant_expression)


State 19

   40 constant_expression: . constant_atom
   41                    | . uop constant_expression
   41                    | uop . constant_expression
   42                    | . LPAREN constant_expression RPAREN
   43                    | . constant_expression op constant_expression
   44 constant_atom: . NUMERIC
   45              | . STRING
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 11
    STRING   shift, and go to state 12
    LPAREN   shift, and go to state 13
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    constant_expression  go to state 37
    constant_atom        go to state 18
    uop                  go to state 19


State 20

    4 function_def: FUNCTION IDENT LPAREN . args RPAREN LBRACE body RBRACE
    6 args: . %empty  [RPAREN, COMMA]
    7     | . IDENT
    8     | . args COMMA IDENT

    IDENT  shift, and go to state 38

    $default  reduce using rule 6 (args)

    args  go to state 39


State 21

   42 constant_expression: LPAREN constant_expression . RPAREN
   43                    | constant_expression . op constant_expression
   55 op: . OR
   56   | . XOR
   57   | . AND
   58   | . EQUAL_EQUAL
   59   | . LANGLE
   60   | . RANGLE
   61   | . LANGLE_EQUAL
   62   | . RANGLE_EQUAL
   63   | . PLUS
   64   | . MINUS
   65   | . STAR
   66   | . FSLASH
   67   | . PERCENT

    RPAREN        shift, and go to state 40
    OR            shift, and go to state 23
    XOR           shift, and go to state 24
    AND           shift, and go to state 25
    EQUAL_EQUAL   shift, and go to state 26
    LANGLE        shift, and go to state 27
    RANGLE        shift, and go to state 28
    LANGLE_EQUAL  shift, and go to state 29
    RANGLE_EQUAL  shift, and go to state 30
    PLUS          shift, and go to state 31
    MINUS         shift, and go to state 32
    STAR          shift, and go to state 33
    FSLASH        shift, and go to state 34
    PERCENT       shift, and go to state 35

    op  go to state 36


State 22

    5 global_def: IDENT EQUAL constant_expression SEMI .

    $default  reduce using rule 5 (global_def)


State 23

   55 op: OR .

    $default  reduce using rule 55 (op)


State 24

   56 op: XOR .

    $default  reduce using rule 56 (op)


State 25

   57 op: AND .

    $default  reduce using rule 57 (op)


State 26

   58 op: EQUAL_EQUAL .

    $default  reduce using rule 58 (op)


State 27

   59 op: LANGLE .

    $default  reduce using rule 59 (op)


State 28

   60 op: RANGLE .

    $default  reduce using rule 60 (op)


State 29

   61 op: LANGLE_EQUAL .

    $default  reduce using rule 61 (op)


State 30

   62 op: RANGLE_EQUAL .

    $default  reduce using rule 62 (op)


State 31

   63 op: PLUS .

    $default  reduce using rule 63 (op)


State 32

   64 op: MINUS .

    $default  reduce using rule 64 (op)


State 33

   65 op: STAR .

    $default  reduce using rule 65 (op)


State 34

   66 op: FSLASH .

    $default  reduce using rule 66 (op)


State 35

   67 op: PERCENT .

    $default  reduce using rule 67 (op)


State 36

   40 constant_expression: . constant_atom
   41                    | . uop constant_expression
   42                    | . LPAREN constant_expression RPAREN
   43                    | . constant_expression op constant_expression
   43                    | constant_expression op . constant_expression
   44 constant_atom: . NUMERIC
   45              | . STRING
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 11
    STRING   shift, and go to state 12
    LPAREN   shift, and go to state 13
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    constant_expression  go to state 41
    constant_atom        go to state 18
    uop                  go to state 19


State 37

   41 constant_expression: uop constant_expression .  [RPAREN, SEMI, OR, XOR, AND, EQUAL_EQUAL, LANGLE, RANGLE, LANGLE_EQUAL, RANGLE_EQUAL, PLUS, MINUS, STAR, FSLASH, PERCENT]
   43                    | constant_expression . op constant_expression
   55 op: . OR
   56   | . XOR
   57   | . AND
   58   | . EQUAL_EQUAL
   59   | . LANGLE
   60   | . RANGLE
   61   | . LANGLE_EQUAL
   62   | . RANGLE_EQUAL
   63   | . PLUS
   64   | . MINUS
   65   | . STAR
   66   | . FSLASH
   67   | . PERCENT

    $default  reduce using rule 41 (constant_expression)

    op  go to state 36

    Conflict between rule 41 and token OR resolved as reduce (OR < UNARY).
    Conflict between rule 41 and token XOR resolved as reduce (XOR < UNARY).
    Conflict between rule 41 and token AND resolved as reduce (AND < UNARY).
    Conflict between rule 41 and token EQUAL_EQUAL resolved as reduce (EQUAL_EQUAL < UNARY).
    Conflict between rule 41 and token LANGLE resolved as reduce (LANGLE < UNARY).
    Conflict between rule 41 and token RANGLE resolved as reduce (RANGLE < UNARY).
    Conflict between rule 41 and token LANGLE_EQUAL resolved as reduce (LANGLE_EQUAL < UNARY).
    Conflict between rule 41 and token RANGLE_EQUAL resolved as reduce (RANGLE_EQUAL < UNARY).
    Conflict between rule 41 and token PLUS resolved as reduce (PLUS < UNARY).
    Conflict between rule 41 and token MINUS resolved as reduce (MINUS < UNARY).
    Conflict between rule 41 and token STAR resolved as reduce (STAR < UNARY).
    Conflict between rule 41 and token FSLASH resolved as reduce (FSLASH < UNARY).
    Conflict between rule 41 and token PERCENT resolved as reduce (PERCENT < UNARY).


State 38

    7 args: IDENT .

    $default  reduce using rule 7 (args)


State 39

    4 function_def: FUNCTION IDENT LPAREN args . RPAREN LBRACE body RBRACE
    8 args: args . COMMA IDENT

    RPAREN  shift, and go to state 42
    COMMA   shift, and go to state 43


State 40

   42 constant_expression: LPAREN constant_expression RPAREN .

    $default  reduce using rule 42 (constant_expression)


State 41

   43 constant_expression: constant_expression . op constant_expression
   43                    | constant_expression op constant_expression .  [RPAREN, SEMI, OR, XOR, AND, EQUAL_EQUAL, LANGLE, RANGLE, LANGLE_EQUAL, RANGLE_EQUAL, PLUS, MINUS, STAR, FSLASH, PERCENT]
   55 op: . OR
   56   | . XOR
   57   | . AND
   58   | . EQUAL_EQUAL
   59   | . LANGLE
   60   | . RANGLE
   61   | . LANGLE_EQUAL
   62   | . RANGLE_EQUAL
   63   | . PLUS
   64   | . MINUS
   65   | . STAR
   66   | . FSLASH
   67   | . PERCENT

    OR            shift, and go to state 23
    XOR           shift, and go to state 24
    AND           shift, and go to state 25
    EQUAL_EQUAL   shift, and go to state 26
    LANGLE        shift, and go to state 27
    RANGLE        shift, and go to state 28
    LANGLE_EQUAL  shift, and go to state 29
    RANGLE_EQUAL  shift, and go to state 30
    PLUS          shift, and go to state 31
    MINUS         shift, and go to state 32
    STAR          shift, and go to state 33
    FSLASH        shift, and go to state 34
    PERCENT       shift, and go to state 35

    OR            [reduce using rule 43 (constant_expression)]
    XOR           [reduce using rule 43 (constant_expression)]
    AND           [reduce using rule 43 (constant_expression)]
    EQUAL_EQUAL   [reduce using rule 43 (constant_expression)]
    LANGLE        [reduce using rule 43 (constant_expression)]
    RANGLE        [reduce using rule 43 (constant_expression)]
    LANGLE_EQUAL  [reduce using rule 43 (constant_expression)]
    RANGLE_EQUAL  [reduce using rule 43 (constant_expression)]
    PLUS          [reduce using rule 43 (constant_expression)]
    MINUS         [reduce using rule 43 (constant_expression)]
    STAR          [reduce using rule 43 (constant_expression)]
    FSLASH        [reduce using rule 43 (constant_expression)]
    PERCENT       [reduce using rule 43 (constant_expression)]
    $default      reduce using rule 43 (constant_expression)

    op  go to state 36


State 42

    4 function_def: FUNCTION IDENT LPAREN args RPAREN . LBRACE body RBRACE

    LBRACE  shift, and go to state 44


State 43

    8 args: args COMMA . IDENT

    IDENT  shift, and go to state 45


State 44

    4 function_def: FUNCTION IDENT LPAREN args RPAREN LBRACE . body RBRACE
    9 body: . statement
   10     | . body statement
   11 statement: . expression SEMI
   12          | . assign_expression SEMI
   13          | . if_statement
   14          | . while_statement
   15          | . scope_statement
   16          | . block_statement SEMI
   17          | . yield_statement SEMI
   18          | . return_statement SEMI
   19          | . fork_statement SEMI
   20 if_statement: . IF LPAREN expression RPAREN LBRACE body RBRACE else_statement
   24 while_statement: . WHILE expression RPAREN LBRACE body RBRACE
   25 scope_statement: . SCOPE scope_type LBRACE body RBRACE
   29 block_statement: . BLOCK IDENT
   30 yield_statement: . YIELD
   31 return_statement: . RETURN
   32                 | . RETURN expression
   33 fork_statement: . FORK IDENT
   34 assign_expression: . IDENT EQUAL STRING
   35                  | . IDENT EQUAL expression
   36 expression: . atom
   37           | . uop expression
   38           | . LPAREN expression RPAREN
   39           | . expression op expression
   46 atom: . IDENT
   47     | . NUMERIC
   48     | . function_call
   49 function_call: . IDENT LPAREN params RPAREN
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 46
    IDENT    shift, and go to state 47
    LPAREN   shift, and go to state 48
    WHILE    shift, and go to state 49
    IF       shift, and go to state 50
    BLOCK    shift, and go to state 51
    YIELD    shift, and go to state 52
    RETURN   shift, and go to state 53
    FORK     shift, and go to state 54
    SCOPE    shift, and go to state 55
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    body               go to state 56
    statement          go to state 57
    if_statement       go to state 58
    while_statement    go to state 59
    scope_statement    go to state 60
    block_statement    go to state 61
    yield_statement    go to state 62
    return_statement   go to state 63
    fork_statement     go to state 64
    assign_expression  go to state 65
    expression         go to state 66
    atom               go to state 67
    function_call      go to state 68
    uop                go to state 69


State 45

    8 args: args COMMA IDENT .

    $default  reduce using rule 8 (args)


State 46

   47 atom: NUMERIC .

    $default  reduce using rule 47 (atom)


State 47

   34 assign_expression: IDENT . EQUAL STRING
   35                  | IDENT . EQUAL expression
   46 atom: IDENT .  [SEMI, OR, XOR, AND, EQUAL_EQUAL, LANGLE, RANGLE, LANGLE_EQUAL, RANGLE_EQUAL, PLUS, MINUS, STAR, FSLASH, PERCENT]
   49 function_call: IDENT . LPAREN params RPAREN

    LPAREN  shift, and go to state 70
    EQUAL   shift, and go to state 71

    $default  reduce using rule 46 (atom)


State 48

   36 expression: . atom
   37           | . uop expression
   38           | . LPAREN expression RPAREN
   38           | LPAREN . expression RPAREN
   39           | . expression op expression
   46 atom: . IDENT
   47     | . NUMERIC
   48     | . function_call
   49 function_call: . IDENT LPAREN params RPAREN
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 46
    IDENT    shift, and go to state 72
    LPAREN   shift, and go to state 48
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    expression     go to state 73
    atom           go to state 67
    function_call  go to state 68
    uop            go to state 69


State 49

   24 while_statement: WHILE . expression RPAREN LBRACE body RBRACE
   36 expression: . atom
   37           | . uop expression
   38           | . LPAREN expression RPAREN
   39           | . expression op expression
   46 atom: . IDENT
   47     | . NUMERIC
   48     | . function_call
   49 function_call: . IDENT LPAREN params RPAREN
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 46
    IDENT    shift, and go to state 72
    LPAREN   shift, and go to state 48
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    expression     go to state 74
    atom           go to state 67
    function_call  go to state 68
    uop            go to state 69


State 50

   20 if_statement: IF . LPAREN expression RPAREN LBRACE body RBRACE else_statement

    LPAREN  shift, and go to state 75


State 51

   29 block_statement: BLOCK . IDENT

    IDENT  shift, and go to state 76


State 52

   30 yield_statement: YIELD .

    $default  reduce using rule 30 (yield_statement)


State 53

   31 return_statement: RETURN .  [SEMI]
   32                 | RETURN . expression
   36 expression: . atom
   37           | . uop expression
   38           | . LPAREN expression RPAREN
   39           | . expression op expression
   46 atom: . IDENT
   47     | . NUMERIC
   48     | . function_call
   49 function_call: . IDENT LPAREN params RPAREN
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 46
    IDENT    shift, and go to state 72
    LPAREN   shift, and go to state 48
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    $default  reduce using rule 31 (return_statement)

    expression     go to state 77
    atom           go to state 67
    function_call  go to state 68
    uop            go to state 69


State 54

   33 fork_statement: FORK . IDENT

    IDENT  shift, and go to state 78


State 55

   25 scope_statement: SCOPE . scope_type LBRACE body RBRACE
   26 scope_type: . ALWAYS
   27           | . SUCCESS
   28           | . FAILURE

    ALWAYS   shift, and go to state 79
    SUCCESS  shift, and go to state 80
    FAILURE  shift, and go to state 81

    scope_type  go to state 82


State 56

    4 function_def: FUNCTION IDENT LPAREN args RPAREN LBRACE body . RBRACE
   10 body: body . statement
   11 statement: . expression SEMI
   12          | . assign_expression SEMI
   13          | . if_statement
   14          | . while_statement
   15          | . scope_statement
   16          | . block_statement SEMI
   17          | . yield_statement SEMI
   18          | . return_statement SEMI
   19          | . fork_statement SEMI
   20 if_statement: . IF LPAREN expression RPAREN LBRACE body RBRACE else_statement
   24 while_statement: . WHILE expression RPAREN LBRACE body RBRACE
   25 scope_statement: . SCOPE scope_type LBRACE body RBRACE
   29 block_statement: . BLOCK IDENT
   30 yield_statement: . YIELD
   31 return_statement: . RETURN
   32                 | . RETURN expression
   33 fork_statement: . FORK IDENT
   34 assign_expression: . IDENT EQUAL STRING
   35                  | . IDENT EQUAL expression
   36 expression: . atom
   37           | . uop expression
   38           | . LPAREN expression RPAREN
   39           | . expression op expression
   46 atom: . IDENT
   47     | . NUMERIC
   48     | . function_call
   49 function_call: . IDENT LPAREN params RPAREN
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 46
    IDENT    shift, and go to state 47
    RBRACE   shift, and go to state 83
    LPAREN   shift, and go to state 48
    WHILE    shift, and go to state 49
    IF       shift, and go to state 50
    BLOCK    shift, and go to state 51
    YIELD    shift, and go to state 52
    RETURN   shift, and go to state 53
    FORK     shift, and go to state 54
    SCOPE    shift, and go to state 55
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    statement          go to state 84
    if_statement       go to state 58
    while_statement    go to state 59
    scope_statement    go to state 60
    block_statement    go to state 61
    yield_statement    go to state 62
    return_statement   go to state 63
    fork_statement     go to state 64
    assign_expression  go to state 65
    expression         go to state 66
    atom               go to state 67
    function_call      go to state 68
    uop                go to state 69


State 57

    9 body: statement .

    $default  reduce using rule 9 (body)


State 58

   13 statement: if_statement .

    $default  reduce using rule 13 (statement)


State 59

   14 statement: while_statement .

    $default  reduce using rule 14 (statement)


State 60

   15 statement: scope_statement .

    $default  reduce using rule 15 (statement)


State 61

   16 statement: block_statement . SEMI

    SEMI  shift, and go to state 85


State 62

   17 statement: yield_statement . SEMI

    SEMI  shift, and go to state 86


State 63

   18 statement: return_statement . SEMI

    SEMI  shift, and go to state 87


State 64

   19 statement: fork_statement . SEMI

    SEMI  shift, and go to state 88


State 65

   12 statement: assign_expression . SEMI

    SEMI  shift, and go to state 89


State 66

   11 statement: expression . SEMI
   39 expression: expression . op expression
   55 op: . OR
   56   | . XOR
   57   | . AND
   58   | . EQUAL_EQUAL
   59   | . LANGLE
   60   | . RANGLE
   61   | . LANGLE_EQUAL
   62   | . RANGLE_EQUAL
   63   | . PLUS
   64   | . MINUS
   65   | . STAR
   66   | . FSLASH
   67   | . PERCENT

    SEMI          shift, and go to state 90
    OR            shift, and go to state 23
    XOR           shift, and go to state 24
    AND           shift, and go to state 25
    EQUAL_EQUAL   shift, and go to state 26
    LANGLE        shift, and go to state 27
    RANGLE        shift, and go to state 28
    LANGLE_EQUAL  shift, and go to state 29
    RANGLE_EQUAL  shift, and go to state 30
    PLUS          shift, and go to state 31
    MINUS         shift, and go to state 32
    STAR          shift, and go to state 33
    FSLASH        shift, and go to state 34
    PERCENT       shift, and go to state 35

    op  go to state 91


State 67

   36 expression: atom .

    $default  reduce using rule 36 (expression)


State 68

   48 atom: function_call .

    $default  reduce using rule 48 (atom)


State 69

   36 expression: . atom
   37           | . uop expression
   37           | uop . expression
   38           | . LPAREN expression RPAREN
   39           | . expression op expression
   46 atom: . IDENT
   47     | . NUMERIC
   48     | . function_call
   49 function_call: . IDENT LPAREN params RPAREN
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 46
    IDENT    shift, and go to state 72
    LPAREN   shift, and go to state 48
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    expression     go to state 92
    atom           go to state 67
    function_call  go to state 68
    uop            go to state 69


State 70

    6 args: . %empty  [COMMA]
    7     | . IDENT
    8     | . args COMMA IDENT
   36 expression: . atom
   37           | . uop expression
   38           | . LPAREN expression RPAREN
   39           | . expression op expression
   46 atom: . IDENT
   47     | . NUMERIC
   48     | . function_call
   49 function_call: . IDENT LPAREN params RPAREN
   49              | IDENT LPAREN . params RPAREN
   50 params: . %empty  [RPAREN]
   51       | . expression
   52       | . STRING
   53       | . args COMMA expression
   54       | . args COMMA STRING
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 46
    IDENT    shift, and go to state 93
    STRING   shift, and go to state 94
    LPAREN   shift, and go to state 48
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    RPAREN    reduce using rule 50 (params)
    $default  reduce using rule 6 (args)

    args           go to state 95
    expression     go to state 96
    atom           go to state 67
    function_call  go to state 68
    params         go to state 97
    uop            go to state 69


State 71

   34 assign_expression: IDENT EQUAL . STRING
   35                  | IDENT EQUAL . expression
   36 expression: . atom
   37           | . uop expression
   38           | . LPAREN expression RPAREN
   39           | . expression op expression
   46 atom: . IDENT
   47     | . NUMERIC
   48     | . function_call
   49 function_call: . IDENT LPAREN params RPAREN
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 46
    IDENT    shift, and go to state 72
    STRING   shift, and go to state 98
    LPAREN   shift, and go to state 48
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    expression     go to state 99
    atom           go to state 67
    function_call  go to state 68
    uop            go to state 69


State 72

   46 atom: IDENT .  [RPAREN, SEMI, OR, XOR, AND, EQUAL_EQUAL, LANGLE, RANGLE, LANGLE_EQUAL, RANGLE_EQUAL, PLUS, MINUS, STAR, FSLASH, PERCENT]
   49 function_call: IDENT . LPAREN params RPAREN

    LPAREN  shift, and go to state 70

    $default  reduce using rule 46 (atom)


State 73

   38 expression: LPAREN expression . RPAREN
   39           | expression . op expression
   55 op: . OR
   56   | . XOR
   57   | . AND
   58   | . EQUAL_EQUAL
   59   | . LANGLE
   60   | . RANGLE
   61   | . LANGLE_EQUAL
   62   | . RANGLE_EQUAL
   63   | . PLUS
   64   | . MINUS
   65   | . STAR
   66   | . FSLASH
   67   | . PERCENT

    RPAREN        shift, and go to state 100
    OR            shift, and go to state 23
    XOR           shift, and go to state 24
    AND           shift, and go to state 25
    EQUAL_EQUAL   shift, and go to state 26
    LANGLE        shift, and go to state 27
    RANGLE        shift, and go to state 28
    LANGLE_EQUAL  shift, and go to state 29
    RANGLE_EQUAL  shift, and go to state 30
    PLUS          shift, and go to state 31
    MINUS         shift, and go to state 32
    STAR          shift, and go to state 33
    FSLASH        shift, and go to state 34
    PERCENT       shift, and go to state 35

    op  go to state 91


State 74

   24 while_statement: WHILE expression . RPAREN LBRACE body RBRACE
   39 expression: expression . op expression
   55 op: . OR
   56   | . XOR
   57   | . AND
   58   | . EQUAL_EQUAL
   59   | . LANGLE
   60   | . RANGLE
   61   | . LANGLE_EQUAL
   62   | . RANGLE_EQUAL
   63   | . PLUS
   64   | . MINUS
   65   | . STAR
   66   | . FSLASH
   67   | . PERCENT

    RPAREN        shift, and go to state 101
    OR            shift, and go to state 23
    XOR           shift, and go to state 24
    AND           shift, and go to state 25
    EQUAL_EQUAL   shift, and go to state 26
    LANGLE        shift, and go to state 27
    RANGLE        shift, and go to state 28
    LANGLE_EQUAL  shift, and go to state 29
    RANGLE_EQUAL  shift, and go to state 30
    PLUS          shift, and go to state 31
    MINUS         shift, and go to state 32
    STAR          shift, and go to state 33
    FSLASH        shift, and go to state 34
    PERCENT       shift, and go to state 35

    op  go to state 91


State 75

   20 if_statement: IF LPAREN . expression RPAREN LBRACE body RBRACE else_statement
   36 expression: . atom
   37           | . uop expression
   38           | . LPAREN expression RPAREN
   39           | . expression op expression
   46 atom: . IDENT
   47     | . NUMERIC
   48     | . function_call
   49 function_call: . IDENT LPAREN params RPAREN
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 46
    IDENT    shift, and go to state 72
    LPAREN   shift, and go to state 48
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    expression     go to state 102
    atom           go to state 67
    function_call  go to state 68
    uop            go to state 69


State 76

   29 block_statement: BLOCK IDENT .

    $default  reduce using rule 29 (block_statement)


State 77

   32 return_statement: RETURN expression .  [SEMI]
   39 expression: expression . op expression
   55 op: . OR
   56   | . XOR
   57   | . AND
   58   | . EQUAL_EQUAL
   59   | . LANGLE
   60   | . RANGLE
   61   | . LANGLE_EQUAL
   62   | . RANGLE_EQUAL
   63   | . PLUS
   64   | . MINUS
   65   | . STAR
   66   | . FSLASH
   67   | . PERCENT

    OR            shift, and go to state 23
    XOR           shift, and go to state 24
    AND           shift, and go to state 25
    EQUAL_EQUAL   shift, and go to state 26
    LANGLE        shift, and go to state 27
    RANGLE        shift, and go to state 28
    LANGLE_EQUAL  shift, and go to state 29
    RANGLE_EQUAL  shift, and go to state 30
    PLUS          shift, and go to state 31
    MINUS         shift, and go to state 32
    STAR          shift, and go to state 33
    FSLASH        shift, and go to state 34
    PERCENT       shift, and go to state 35

    $default  reduce using rule 32 (return_statement)

    op  go to state 91


State 78

   33 fork_statement: FORK IDENT .

    $default  reduce using rule 33 (fork_statement)


State 79

   26 scope_type: ALWAYS .

    $default  reduce using rule 26 (scope_type)


State 80

   27 scope_type: SUCCESS .

    $default  reduce using rule 27 (scope_type)


State 81

   28 scope_type: FAILURE .

    $default  reduce using rule 28 (scope_type)


State 82

   25 scope_statement: SCOPE scope_type . LBRACE body RBRACE

    LBRACE  shift, and go to state 103


State 83

    4 function_def: FUNCTION IDENT LPAREN args RPAREN LBRACE body RBRACE .

    $default  reduce using rule 4 (function_def)


State 84

   10 body: body statement .

    $default  reduce using rule 10 (body)


State 85

   16 statement: block_statement SEMI .

    $default  reduce using rule 16 (statement)


State 86

   17 statement: yield_statement SEMI .

    $default  reduce using rule 17 (statement)


State 87

   18 statement: return_statement SEMI .

    $default  reduce using rule 18 (statement)


State 88

   19 statement: fork_statement SEMI .

    $default  reduce using rule 19 (statement)


State 89

   12 statement: assign_expression SEMI .

    $default  reduce using rule 12 (statement)


State 90

   11 statement: expression SEMI .

    $default  reduce using rule 11 (statement)


State 91

   36 expression: . atom
   37           | . uop expression
   38           | . LPAREN expression RPAREN
   39           | . expression op expression
   39           | expression op . expression
   46 atom: . IDENT
   47     | . NUMERIC
   48     | . function_call
   49 function_call: . IDENT LPAREN params RPAREN
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 46
    IDENT    shift, and go to state 72
    LPAREN   shift, and go to state 48
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    expression     go to state 104
    atom           go to state 67
    function_call  go to state 68
    uop            go to state 69


State 92

   37 expression: uop expression .  [RPAREN, SEMI, OR, XOR, AND, EQUAL_EQUAL, LANGLE, RANGLE, LANGLE_EQUAL, RANGLE_EQUAL, PLUS, MINUS, STAR, FSLASH, PERCENT]
   39           | expression . op expression
   55 op: . OR
   56   | . XOR
   57   | . AND
   58   | . EQUAL_EQUAL
   59   | . LANGLE
   60   | . RANGLE
   61   | . LANGLE_EQUAL
   62   | . RANGLE_EQUAL
   63   | . PLUS
   64   | . MINUS
   65   | . STAR
   66   | . FSLASH
   67   | . PERCENT

    $default  reduce using rule 37 (expression)

    op  go to state 91

    Conflict between rule 37 and token OR resolved as reduce (OR < UNARY).
    Conflict between rule 37 and token XOR resolved as reduce (XOR < UNARY).
    Conflict between rule 37 and token AND resolved as reduce (AND < UNARY).
    Conflict between rule 37 and token EQUAL_EQUAL resolved as reduce (EQUAL_EQUAL < UNARY).
    Conflict between rule 37 and token LANGLE resolved as reduce (LANGLE < UNARY).
    Conflict between rule 37 and token RANGLE resolved as reduce (RANGLE < UNARY).
    Conflict between rule 37 and token LANGLE_EQUAL resolved as reduce (LANGLE_EQUAL < UNARY).
    Conflict between rule 37 and token RANGLE_EQUAL resolved as reduce (RANGLE_EQUAL < UNARY).
    Conflict between rule 37 and token PLUS resolved as reduce (PLUS < UNARY).
    Conflict between rule 37 and token MINUS resolved as reduce (MINUS < UNARY).
    Conflict between rule 37 and token STAR resolved as reduce (STAR < UNARY).
    Conflict between rule 37 and token FSLASH resolved as reduce (FSLASH < UNARY).
    Conflict between rule 37 and token PERCENT resolved as reduce (PERCENT < UNARY).


State 93

    7 args: IDENT .  [COMMA]
   46 atom: IDENT .  [RPAREN, OR, XOR, AND, EQUAL_EQUAL, LANGLE, RANGLE, LANGLE_EQUAL, RANGLE_EQUAL, PLUS, MINUS, STAR, FSLASH, PERCENT]
   49 function_call: IDENT . LPAREN params RPAREN

    LPAREN  shift, and go to state 70

    COMMA     reduce using rule 7 (args)
    $default  reduce using rule 46 (atom)


State 94

   52 params: STRING .

    $default  reduce using rule 52 (params)


State 95

    8 args: args . COMMA IDENT
   53 params: args . COMMA expression
   54       | args . COMMA STRING

    COMMA  shift, and go to state 105


State 96

   39 expression: expression . op expression
   51 params: expression .  [RPAREN]
   55 op: . OR
   56   | . XOR
   57   | . AND
   58   | . EQUAL_EQUAL
   59   | . LANGLE
   60   | . RANGLE
   61   | . LANGLE_EQUAL
   62   | . RANGLE_EQUAL
   63   | . PLUS
   64   | . MINUS
   65   | . STAR
   66   | . FSLASH
   67   | . PERCENT

    OR            shift, and go to state 23
    XOR           shift, and go to state 24
    AND           shift, and go to state 25
    EQUAL_EQUAL   shift, and go to state 26
    LANGLE        shift, and go to state 27
    RANGLE        shift, and go to state 28
    LANGLE_EQUAL  shift, and go to state 29
    RANGLE_EQUAL  shift, and go to state 30
    PLUS          shift, and go to state 31
    MINUS         shift, and go to state 32
    STAR          shift, and go to state 33
    FSLASH        shift, and go to state 34
    PERCENT       shift, and go to state 35

    $default  reduce using rule 51 (params)

    op  go to state 91


State 97

   49 function_call: IDENT LPAREN params . RPAREN

    RPAREN  shift, and go to state 106


State 98

   34 assign_expression: IDENT EQUAL STRING .

    $default  reduce using rule 34 (assign_expression)


State 99

   35 assign_expression: IDENT EQUAL expression .  [SEMI]
   39 expression: expression . op expression
   55 op: . OR
   56   | . XOR
   57   | . AND
   58   | . EQUAL_EQUAL
   59   | . LANGLE
   60   | . RANGLE
   61   | . LANGLE_EQUAL
   62   | . RANGLE_EQUAL
   63   | . PLUS
   64   | . MINUS
   65   | . STAR
   66   | . FSLASH
   67   | . PERCENT

    OR            shift, and go to state 23
    XOR           shift, and go to state 24
    AND           shift, and go to state 25
    EQUAL_EQUAL   shift, and go to state 26
    LANGLE        shift, and go to state 27
    RANGLE        shift, and go to state 28
    LANGLE_EQUAL  shift, and go to state 29
    RANGLE_EQUAL  shift, and go to state 30
    PLUS          shift, and go to state 31
    MINUS         shift, and go to state 32
    STAR          shift, and go to state 33
    FSLASH        shift, and go to state 34
    PERCENT       shift, and go to state 35

    $default  reduce using rule 35 (assign_expression)

    op  go to state 91


State 100

   38 expression: LPAREN expression RPAREN .

    $default  reduce using rule 38 (expression)


State 101

   24 while_statement: WHILE expression RPAREN . LBRACE body RBRACE

    LBRACE  shift, and go to state 107


State 102

   20 if_statement: IF LPAREN expression . RPAREN LBRACE body RBRACE else_statement
   39 expression: expression . op expression
   55 op: . OR
   56   | . XOR
   57   | . AND
   58   | . EQUAL_EQUAL
   59   | . LANGLE
   60   | . RANGLE
   61   | . LANGLE_EQUAL
   62   | . RANGLE_EQUAL
   63   | . PLUS
   64   | . MINUS
   65   | . STAR
   66   | . FSLASH
   67   | . PERCENT

    RPAREN        shift, and go to state 108
    OR            shift, and go to state 23
    XOR           shift, and go to state 24
    AND           shift, and go to state 25
    EQUAL_EQUAL   shift, and go to state 26
    LANGLE        shift, and go to state 27
    RANGLE        shift, and go to state 28
    LANGLE_EQUAL  shift, and go to state 29
    RANGLE_EQUAL  shift, and go to state 30
    PLUS          shift, and go to state 31
    MINUS         shift, and go to state 32
    STAR          shift, and go to state 33
    FSLASH        shift, and go to state 34
    PERCENT       shift, and go to state 35

    op  go to state 91


State 103

    9 body: . statement
   10     | . body statement
   11 statement: . expression SEMI
   12          | . assign_expression SEMI
   13          | . if_statement
   14          | . while_statement
   15          | . scope_statement
   16          | . block_statement SEMI
   17          | . yield_statement SEMI
   18          | . return_statement SEMI
   19          | . fork_statement SEMI
   20 if_statement: . IF LPAREN expression RPAREN LBRACE body RBRACE else_statement
   24 while_statement: . WHILE expression RPAREN LBRACE body RBRACE
   25 scope_statement: . SCOPE scope_type LBRACE body RBRACE
   25                | SCOPE scope_type LBRACE . body RBRACE
   29 block_statement: . BLOCK IDENT
   30 yield_statement: . YIELD
   31 return_statement: . RETURN
   32                 | . RETURN expression
   33 fork_statement: . FORK IDENT
   34 assign_expression: . IDENT EQUAL STRING
   35                  | . IDENT EQUAL expression
   36 expression: . atom
   37           | . uop expression
   38           | . LPAREN expression RPAREN
   39           | . expression op expression
   46 atom: . IDENT
   47     | . NUMERIC
   48     | . function_call
   49 function_call: . IDENT LPAREN params RPAREN
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 46
    IDENT    shift, and go to state 47
    LPAREN   shift, and go to state 48
    WHILE    shift, and go to state 49
    IF       shift, and go to state 50
    BLOCK    shift, and go to state 51
    YIELD    shift, and go to state 52
    RETURN   shift, and go to state 53
    FORK     shift, and go to state 54
    SCOPE    shift, and go to state 55
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    body               go to state 109
    statement          go to state 57
    if_statement       go to state 58
    while_statement    go to state 59
    scope_statement    go to state 60
    block_statement    go to state 61
    yield_statement    go to state 62
    return_statement   go to state 63
    fork_statement     go to state 64
    assign_expression  go to state 65
    expression         go to state 66
    atom               go to state 67
    function_call      go to state 68
    uop                go to state 69


State 104

   39 expression: expression . op expression
   39           | expression op expression .  [RPAREN, SEMI, OR, XOR, AND, EQUAL_EQUAL, LANGLE, RANGLE, LANGLE_EQUAL, RANGLE_EQUAL, PLUS, MINUS, STAR, FSLASH, PERCENT]
   55 op: . OR
   56   | . XOR
   57   | . AND
   58   | . EQUAL_EQUAL
   59   | . LANGLE
   60   | . RANGLE
   61   | . LANGLE_EQUAL
   62   | . RANGLE_EQUAL
   63   | . PLUS
   64   | . MINUS
   65   | . STAR
   66   | . FSLASH
   67   | . PERCENT

    OR            shift, and go to state 23
    XOR           shift, and go to state 24
    AND           shift, and go to state 25
    EQUAL_EQUAL   shift, and go to state 26
    LANGLE        shift, and go to state 27
    RANGLE        shift, and go to state 28
    LANGLE_EQUAL  shift, and go to state 29
    RANGLE_EQUAL  shift, and go to state 30
    PLUS          shift, and go to state 31
    MINUS         shift, and go to state 32
    STAR          shift, and go to state 33
    FSLASH        shift, and go to state 34
    PERCENT       shift, and go to state 35

    OR            [reduce using rule 39 (expression)]
    XOR           [reduce using rule 39 (expression)]
    AND           [reduce using rule 39 (expression)]
    EQUAL_EQUAL   [reduce using rule 39 (expression)]
    LANGLE        [reduce using rule 39 (expression)]
    RANGLE        [reduce using rule 39 (expression)]
    LANGLE_EQUAL  [reduce using rule 39 (expression)]
    RANGLE_EQUAL  [reduce using rule 39 (expression)]
    PLUS          [reduce using rule 39 (expression)]
    MINUS         [reduce using rule 39 (expression)]
    STAR          [reduce using rule 39 (expression)]
    FSLASH        [reduce using rule 39 (expression)]
    PERCENT       [reduce using rule 39 (expression)]
    $default      reduce using rule 39 (expression)

    op  go to state 91


State 105

    8 args: args COMMA . IDENT
   36 expression: . atom
   37           | . uop expression
   38           | . LPAREN expression RPAREN
   39           | . expression op expression
   46 atom: . IDENT
   47     | . NUMERIC
   48     | . function_call
   49 function_call: . IDENT LPAREN params RPAREN
   53 params: args COMMA . expression
   54       | args COMMA . STRING
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 46
    IDENT    shift, and go to state 110
    STRING   shift, and go to state 111
    LPAREN   shift, and go to state 48
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    expression     go to state 112
    atom           go to state 67
    function_call  go to state 68
    uop            go to state 69


State 106

   49 function_call: IDENT LPAREN params RPAREN .

    $default  reduce using rule 49 (function_call)


State 107

    9 body: . statement
   10     | . body statement
   11 statement: . expression SEMI
   12          | . assign_expression SEMI
   13          | . if_statement
   14          | . while_statement
   15          | . scope_statement
   16          | . block_statement SEMI
   17          | . yield_statement SEMI
   18          | . return_statement SEMI
   19          | . fork_statement SEMI
   20 if_statement: . IF LPAREN expression RPAREN LBRACE body RBRACE else_statement
   24 while_statement: . WHILE expression RPAREN LBRACE body RBRACE
   24                | WHILE expression RPAREN LBRACE . body RBRACE
   25 scope_statement: . SCOPE scope_type LBRACE body RBRACE
   29 block_statement: . BLOCK IDENT
   30 yield_statement: . YIELD
   31 return_statement: . RETURN
   32                 | . RETURN expression
   33 fork_statement: . FORK IDENT
   34 assign_expression: . IDENT EQUAL STRING
   35                  | . IDENT EQUAL expression
   36 expression: . atom
   37           | . uop expression
   38           | . LPAREN expression RPAREN
   39           | . expression op expression
   46 atom: . IDENT
   47     | . NUMERIC
   48     | . function_call
   49 function_call: . IDENT LPAREN params RPAREN
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 46
    IDENT    shift, and go to state 47
    LPAREN   shift, and go to state 48
    WHILE    shift, and go to state 49
    IF       shift, and go to state 50
    BLOCK    shift, and go to state 51
    YIELD    shift, and go to state 52
    RETURN   shift, and go to state 53
    FORK     shift, and go to state 54
    SCOPE    shift, and go to state 55
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    body               go to state 113
    statement          go to state 57
    if_statement       go to state 58
    while_statement    go to state 59
    scope_statement    go to state 60
    block_statement    go to state 61
    yield_statement    go to state 62
    return_statement   go to state 63
    fork_statement     go to state 64
    assign_expression  go to state 65
    expression         go to state 66
    atom               go to state 67
    function_call      go to state 68
    uop                go to state 69


State 108

   20 if_statement: IF LPAREN expression RPAREN . LBRACE body RBRACE else_statement

    LBRACE  shift, and go to state 114


State 109

   10 body: body . statement
   11 statement: . expression SEMI
   12          | . assign_expression SEMI
   13          | . if_statement
   14          | . while_statement
   15          | . scope_statement
   16          | . block_statement SEMI
   17          | . yield_statement SEMI
   18          | . return_statement SEMI
   19          | . fork_statement SEMI
   20 if_statement: . IF LPAREN expression RPAREN LBRACE body RBRACE else_statement
   24 while_statement: . WHILE expression RPAREN LBRACE body RBRACE
   25 scope_statement: . SCOPE scope_type LBRACE body RBRACE
   25                | SCOPE scope_type LBRACE body . RBRACE
   29 block_statement: . BLOCK IDENT
   30 yield_statement: . YIELD
   31 return_statement: . RETURN
   32                 | . RETURN expression
   33 fork_statement: . FORK IDENT
   34 assign_expression: . IDENT EQUAL STRING
   35                  | . IDENT EQUAL expression
   36 expression: . atom
   37           | . uop expression
   38           | . LPAREN expression RPAREN
   39           | . expression op expression
   46 atom: . IDENT
   47     | . NUMERIC
   48     | . function_call
   49 function_call: . IDENT LPAREN params RPAREN
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 46
    IDENT    shift, and go to state 47
    RBRACE   shift, and go to state 115
    LPAREN   shift, and go to state 48
    WHILE    shift, and go to state 49
    IF       shift, and go to state 50
    BLOCK    shift, and go to state 51
    YIELD    shift, and go to state 52
    RETURN   shift, and go to state 53
    FORK     shift, and go to state 54
    SCOPE    shift, and go to state 55
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    statement          go to state 84
    if_statement       go to state 58
    while_statement    go to state 59
    scope_statement    go to state 60
    block_statement    go to state 61
    yield_statement    go to state 62
    return_statement   go to state 63
    fork_statement     go to state 64
    assign_expression  go to state 65
    expression         go to state 66
    atom               go to state 67
    function_call      go to state 68
    uop                go to state 69


State 110

    8 args: args COMMA IDENT .  [COMMA]
   46 atom: IDENT .  [RPAREN, OR, XOR, AND, EQUAL_EQUAL, LANGLE, RANGLE, LANGLE_EQUAL, RANGLE_EQUAL, PLUS, MINUS, STAR, FSLASH, PERCENT]
   49 function_call: IDENT . LPAREN params RPAREN

    LPAREN  shift, and go to state 70

    COMMA     reduce using rule 8 (args)
    $default  reduce using rule 46 (atom)


State 111

   54 params: args COMMA STRING .

    $default  reduce using rule 54 (params)


State 112

   39 expression: expression . op expression
   53 params: args COMMA expression .  [RPAREN]
   55 op: . OR
   56   | . XOR
   57   | . AND
   58   | . EQUAL_EQUAL
   59   | . LANGLE
   60   | . RANGLE
   61   | . LANGLE_EQUAL
   62   | . RANGLE_EQUAL
   63   | . PLUS
   64   | . MINUS
   65   | . STAR
   66   | . FSLASH
   67   | . PERCENT

    OR            shift, and go to state 23
    XOR           shift, and go to state 24
    AND           shift, and go to state 25
    EQUAL_EQUAL   shift, and go to state 26
    LANGLE        shift, and go to state 27
    RANGLE        shift, and go to state 28
    LANGLE_EQUAL  shift, and go to state 29
    RANGLE_EQUAL  shift, and go to state 30
    PLUS          shift, and go to state 31
    MINUS         shift, and go to state 32
    STAR          shift, and go to state 33
    FSLASH        shift, and go to state 34
    PERCENT       shift, and go to state 35

    $default  reduce using rule 53 (params)

    op  go to state 91


State 113

   10 body: body . statement
   11 statement: . expression SEMI
   12          | . assign_expression SEMI
   13          | . if_statement
   14          | . while_statement
   15          | . scope_statement
   16          | . block_statement SEMI
   17          | . yield_statement SEMI
   18          | . return_statement SEMI
   19          | . fork_statement SEMI
   20 if_statement: . IF LPAREN expression RPAREN LBRACE body RBRACE else_statement
   24 while_statement: . WHILE expression RPAREN LBRACE body RBRACE
   24                | WHILE expression RPAREN LBRACE body . RBRACE
   25 scope_statement: . SCOPE scope_type LBRACE body RBRACE
   29 block_statement: . BLOCK IDENT
   30 yield_statement: . YIELD
   31 return_statement: . RETURN
   32                 | . RETURN expression
   33 fork_statement: . FORK IDENT
   34 assign_expression: . IDENT EQUAL STRING
   35                  | . IDENT EQUAL expression
   36 expression: . atom
   37           | . uop expression
   38           | . LPAREN expression RPAREN
   39           | . expression op expression
   46 atom: . IDENT
   47     | . NUMERIC
   48     | . function_call
   49 function_call: . IDENT LPAREN params RPAREN
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 46
    IDENT    shift, and go to state 47
    RBRACE   shift, and go to state 116
    LPAREN   shift, and go to state 48
    WHILE    shift, and go to state 49
    IF       shift, and go to state 50
    BLOCK    shift, and go to state 51
    YIELD    shift, and go to state 52
    RETURN   shift, and go to state 53
    FORK     shift, and go to state 54
    SCOPE    shift, and go to state 55
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    statement          go to state 84
    if_statement       go to state 58
    while_statement    go to state 59
    scope_statement    go to state 60
    block_statement    go to state 61
    yield_statement    go to state 62
    return_statement   go to state 63
    fork_statement     go to state 64
    assign_expression  go to state 65
    expression         go to state 66
    atom               go to state 67
    function_call      go to state 68
    uop                go to state 69


State 114

    9 body: . statement
   10     | . body statement
   11 statement: . expression SEMI
   12          | . assign_expression SEMI
   13          | . if_statement
   14          | . while_statement
   15          | . scope_statement
   16          | . block_statement SEMI
   17          | . yield_statement SEMI
   18          | . return_statement SEMI
   19          | . fork_statement SEMI
   20 if_statement: . IF LPAREN expression RPAREN LBRACE body RBRACE else_statement
   20             | IF LPAREN expression RPAREN LBRACE . body RBRACE else_statement
   24 while_statement: . WHILE expression RPAREN LBRACE body RBRACE
   25 scope_statement: . SCOPE scope_type LBRACE body RBRACE
   29 block_statement: . BLOCK IDENT
   30 yield_statement: . YIELD
   31 return_statement: . RETURN
   32                 | . RETURN expression
   33 fork_statement: . FORK IDENT
   34 assign_expression: . IDENT EQUAL STRING
   35                  | . IDENT EQUAL expression
   36 expression: . atom
   37           | . uop expression
   38           | . LPAREN expression RPAREN
   39           | . expression op expression
   46 atom: . IDENT
   47     | . NUMERIC
   48     | . function_call
   49 function_call: . IDENT LPAREN params RPAREN
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 46
    IDENT    shift, and go to state 47
    LPAREN   shift, and go to state 48
    WHILE    shift, and go to state 49
    IF       shift, and go to state 50
    BLOCK    shift, and go to state 51
    YIELD    shift, and go to state 52
    RETURN   shift, and go to state 53
    FORK     shift, and go to state 54
    SCOPE    shift, and go to state 55
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    body               go to state 117
    statement          go to state 57
    if_statement       go to state 58
    while_statement    go to state 59
    scope_statement    go to state 60
    block_statement    go to state 61
    yield_statement    go to state 62
    return_statement   go to state 63
    fork_statement     go to state 64
    assign_expression  go to state 65
    expression         go to state 66
    atom               go to state 67
    function_call      go to state 68
    uop                go to state 69


State 115

   25 scope_statement: SCOPE scope_type LBRACE body RBRACE .

    $default  reduce using rule 25 (scope_statement)


State 116

   24 while_statement: WHILE expression RPAREN LBRACE body RBRACE .

    $default  reduce using rule 24 (while_statement)


State 117

   10 body: body . statement
   11 statement: . expression SEMI
   12          | . assign_expression SEMI
   13          | . if_statement
   14          | . while_statement
   15          | . scope_statement
   16          | . block_statement SEMI
   17          | . yield_statement SEMI
   18          | . return_statement SEMI
   19          | . fork_statement SEMI
   20 if_statement: . IF LPAREN expression RPAREN LBRACE body RBRACE else_statement
   20             | IF LPAREN expression RPAREN LBRACE body . RBRACE else_statement
   24 while_statement: . WHILE expression RPAREN LBRACE body RBRACE
   25 scope_statement: . SCOPE scope_type LBRACE body RBRACE
   29 block_statement: . BLOCK IDENT
   30 yield_statement: . YIELD
   31 return_statement: . RETURN
   32                 | . RETURN expression
   33 fork_statement: . FORK IDENT
   34 assign_expression: . IDENT EQUAL STRING
   35                  | . IDENT EQUAL expression
   36 expression: . atom
   37           | . uop expression
   38           | . LPAREN expression RPAREN
   39           | . expression op expression
   46 atom: . IDENT
   47     | . NUMERIC
   48     | . function_call
   49 function_call: . IDENT LPAREN params RPAREN
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 46
    IDENT    shift, and go to state 47
    RBRACE   shift, and go to state 118
    LPAREN   shift, and go to state 48
    WHILE    shift, and go to state 49
    IF       shift, and go to state 50
    BLOCK    shift, and go to state 51
    YIELD    shift, and go to state 52
    RETURN   shift, and go to state 53
    FORK     shift, and go to state 54
    SCOPE    shift, and go to state 55
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    statement          go to state 84
    if_statement       go to state 58
    while_statement    go to state 59
    scope_statement    go to state 60
    block_statement    go to state 61
    yield_statement    go to state 62
    return_statement   go to state 63
    fork_statement     go to state 64
    assign_expression  go to state 65
    expression         go to state 66
    atom               go to state 67
    function_call      go to state 68
    uop                go to state 69


State 118

   20 if_statement: IF LPAREN expression RPAREN LBRACE body RBRACE . else_statement
   21 else_statement: . %empty  [NUMERIC, IDENT, RBRACE, LPAREN, RPAREN, WHILE, IF, BLOCK, YIELD, RETURN, FORK, SCOPE, PLUS, MINUS, NOT]
   22               | . ELSE LPAREN body RPAREN
   23               | . ELSE if_statement

    ELSE  shift, and go to state 119

    $default  reduce using rule 21 (else_statement)

    else_statement  go to state 120


State 119

   20 if_statement: . IF LPAREN expression RPAREN LBRACE body RBRACE else_statement
   22 else_statement: ELSE . LPAREN body RPAREN
   23               | ELSE . if_statement

    LPAREN  shift, and go to state 121
    IF      shift, and go to state 50

    if_statement  go to state 122


State 120

   20 if_statement: IF LPAREN expression RPAREN LBRACE body RBRACE else_statement .

    $default  reduce using rule 20 (if_statement)


State 121

    9 body: . statement
   10     | . body statement
   11 statement: . expression SEMI
   12          | . assign_expression SEMI
   13          | . if_statement
   14          | . while_statement
   15          | . scope_statement
   16          | . block_statement SEMI
   17          | . yield_statement SEMI
   18          | . return_statement SEMI
   19          | . fork_statement SEMI
   20 if_statement: . IF LPAREN expression RPAREN LBRACE body RBRACE else_statement
   22 else_statement: ELSE LPAREN . body RPAREN
   24 while_statement: . WHILE expression RPAREN LBRACE body RBRACE
   25 scope_statement: . SCOPE scope_type LBRACE body RBRACE
   29 block_statement: . BLOCK IDENT
   30 yield_statement: . YIELD
   31 return_statement: . RETURN
   32                 | . RETURN expression
   33 fork_statement: . FORK IDENT
   34 assign_expression: . IDENT EQUAL STRING
   35                  | . IDENT EQUAL expression
   36 expression: . atom
   37           | . uop expression
   38           | . LPAREN expression RPAREN
   39           | . expression op expression
   46 atom: . IDENT
   47     | . NUMERIC
   48     | . function_call
   49 function_call: . IDENT LPAREN params RPAREN
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 46
    IDENT    shift, and go to state 47
    LPAREN   shift, and go to state 48
    WHILE    shift, and go to state 49
    IF       shift, and go to state 50
    BLOCK    shift, and go to state 51
    YIELD    shift, and go to state 52
    RETURN   shift, and go to state 53
    FORK     shift, and go to state 54
    SCOPE    shift, and go to state 55
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    body               go to state 123
    statement          go to state 57
    if_statement       go to state 58
    while_statement    go to state 59
    scope_statement    go to state 60
    block_statement    go to state 61
    yield_statement    go to state 62
    return_statement   go to state 63
    fork_statement     go to state 64
    assign_expression  go to state 65
    expression         go to state 66
    atom               go to state 67
    function_call      go to state 68
    uop                go to state 69


State 122

   23 else_statement: ELSE if_statement .

    $default  reduce using rule 23 (else_statement)


State 123

   10 body: body . statement
   11 statement: . expression SEMI
   12          | . assign_expression SEMI
   13          | . if_statement
   14          | . while_statement
   15          | . scope_statement
   16          | . block_statement SEMI
   17          | . yield_statement SEMI
   18          | . return_statement SEMI
   19          | . fork_statement SEMI
   20 if_statement: . IF LPAREN expression RPAREN LBRACE body RBRACE else_statement
   22 else_statement: ELSE LPAREN body . RPAREN
   24 while_statement: . WHILE expression RPAREN LBRACE body RBRACE
   25 scope_statement: . SCOPE scope_type LBRACE body RBRACE
   29 block_statement: . BLOCK IDENT
   30 yield_statement: . YIELD
   31 return_statement: . RETURN
   32                 | . RETURN expression
   33 fork_statement: . FORK IDENT
   34 assign_expression: . IDENT EQUAL STRING
   35                  | . IDENT EQUAL expression
   36 expression: . atom
   37           | . uop expression
   38           | . LPAREN expression RPAREN
   39           | . expression op expression
   46 atom: . IDENT
   47     | . NUMERIC
   48     | . function_call
   49 function_call: . IDENT LPAREN params RPAREN
   68 uop: . NOT
   69    | . MINUS
   70    | . PLUS

    NUMERIC  shift, and go to state 46
    IDENT    shift, and go to state 47
    LPAREN   shift, and go to state 48
    RPAREN   shift, and go to state 124
    WHILE    shift, and go to state 49
    IF       shift, and go to state 50
    BLOCK    shift, and go to state 51
    YIELD    shift, and go to state 52
    RETURN   shift, and go to state 53
    FORK     shift, and go to state 54
    SCOPE    shift, and go to state 55
    PLUS     shift, and go to state 14
    MINUS    shift, and go to state 15
    NOT      shift, and go to state 16

    statement          go to state 84
    if_statement       go to state 58
    while_statement    go to state 59
    scope_statement    go to state 60
    block_statement    go to state 61
    yield_statement    go to state 62
    return_statement   go to state 63
    fork_statement     go to state 64
    assign_expression  go to state 65
    expression         go to state 66
    atom               go to state 67
    function_call      go to state 68
    uop                go to state 69


State 124

   22 else_statement: ELSE LPAREN body RPAREN .

    $default  reduce using rule 22 (else_statement)
